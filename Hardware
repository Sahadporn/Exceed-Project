//INCLUDE 
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include <DHT.h>
#include <Adafruit_Sensor.h>
#include <LiquidCrystal_I2C.h>

//DEFINE
#define DHTPIN 27
#define DHTTYPE DHT11

//ALL CONST
const int i2c_addr = 0x27;
const char* ssid= "Bbb01";//Bbb01
const char* password= "bankbankbank";//bankbankbank
const char* urlget_time="http://158.108.182.5:20004/time?car_id=1";//get
const char* urlpost="http://158.108.182.5:20004/temp_input";
const char* urlget_status="http://158.108.182.5:20004/status?car_id=1";//get
const char* urlget_alram="http://158.108.182.5:20004/alert?car_id=1";//get
const int _size=2*JSON_OBJECT_SIZE(4);

//ALL INTCHAR
char str[50];
int speakerOut = 4;

//MODULE
DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(i2c_addr,16,2);
StaticJsonDocument<_size> JSONPost;
StaticJsonDocument<_size> JSONGet;

//
void wifi_connect()
{
    WiFi.disconnect();
    WiFi.begin(ssid,password);
    while (WiFi.status()!= WL_CONNECTED){
      delay(1000);
      Serial.println("Connecting to WiFi");  
    }
    Serial.println("Connected to the WIFI NETWORK");
    Serial.print("IP :");
    Serial.println(WiFi.localIP());
}

int _get(int modee){
  if(WiFi.status() == WL_CONNECTED){
    HTTPClient http;
    if(modee ==1){
      http.begin(urlget_status);
      int httpCode = http.GET();
      if(httpCode == HTTP_CODE_OK){
        String payload = http.getString();
        DeserializationError err = deserializeJson(JSONGet,payload);
        if(!err){
        Serial.println(httpCode);
        Serial.print("Status: ");
        //Serial.println(payload);
        int c = (int)JSONGet["status"];
        Serial.println(c);
        if(c==0 || c==1)
        {
          return 1;
        }
        else if(c==3){
          return 2;
        }
        else{
          return 0;
        }
        }
      }
      else
      {
        Serial.println("error");
        Serial.println(httpCode);
      }
      
    }//end mode 1
    if(modee ==2){
      http.begin(urlget_time);
      int httpCode = http.GET();
      if(httpCode == HTTP_CODE_OK){
        String payload = http.getString();
        DeserializationError err = deserializeJson(JSONGet,payload);
        if(!err){
        Serial.println(httpCode);
        Serial.print("time: ");
        //Serial.println(payload);
        int c = (int)JSONGet["time"];
        Serial.println(c);
        return c;
        
        }
      }
      else
      {
        Serial.println("error");
        Serial.println(httpCode);
      }
      
    }//end mode 2
    if(modee ==3){
      http.begin(urlget_alram);
      int httpCode = http.GET();
      if(httpCode == HTTP_CODE_OK){
        String payload = http.getString();
        DeserializationError err = deserializeJson(JSONGet,payload);
        if(!err){
        Serial.println(httpCode);
        Serial.print("now in range: ");
        //Serial.println(payload);
        int c = (int)JSONGet["alert"];
        Serial.println(c);
        return c;
        
        }
      }
      else
      {
        Serial.println("error");
        Serial.println(httpCode);
      }
  }
  else
  {
    wifi_connect();
  }
}

}
void _post(float temp){
  if(WiFi.status() == WL_CONNECTED){
    HTTPClient http;
    http.begin(urlpost);
    http.addHeader("Content-Type","application/json");
    JSONPost["car_id"]="1";
    JSONPost["temp"]=temp;
    serializeJson(JSONPost, str);
    int httpCode = http.POST(str);
    Serial.println(httpCode);
    if(httpCode  == HTTP_CODE_OK)
    {
      String payload = http.getString();
      Serial.println(httpCode);
      Serial.println(payload);
    }
    else
      {
        Serial.println(httpCode);
        Serial.println("Error");
      }
   }
   else
   {
     wifi_connect();
   }
   delay(1000);    
}


void lcd_out(float t,int timee,int now){
    
    if(isnan(t)){
      Serial.println("Error to read DHT");
    }
    else{
      Serial.print("Temperature: "); 
      Serial.print(t);
      Serial.println(" *C");
    }
    lcd.setCursor(0,0);
    lcd.print("Temp: ");
    lcd.print (t);
    lcd.setCursor(0,1);
    lcd.print("Time: ");
    if(now ==1){
    int h=timee/3600;
    timee = timee%3600;
    int mi=timee/60;
    lcd.print(h);
    lcd.print(":");
    lcd.print(mi);
    }
    else
    {
      lcd.print("---");
      }
    
}

void beep(int alram){
  if(alram)
  {
    for (int i=0;i<500;i++){
    digitalWrite(speakerOut,HIGH);
    delayMicroseconds(1000);
    digitalWrite(speakerOut,LOW);
    delayMicroseconds(1000);
    }
  }
}

void setup() 
{
    Serial.begin(115200);
    Serial.println("Welcome to temp Project");
    
    lcd.init();
    lcd.backlight();
    dht.begin();
    pinMode(speakerOut, OUTPUT);
    delay(5000);
    wifi_connect();
}

void loop() 
{
    float t = dht.readTemperature();
    float h = dht.readHumidity();
    //float t = 34.0; for test 
    
    int now = _get(1);//not 
    
    int timee = _get(2);
    
    int alram = _get(3);
    Serial.println(now);
    Serial.println("alram");
    Serial.println(alram);
    
    Serial.println(timee);
    if(now ==1 || now ==2){
      _post(t);
      if(now ==1){
      beep(alram);
      } 
    }
    //beep(alram); 
    lcd_out(t,timee,now);
    delay(1000);
}
